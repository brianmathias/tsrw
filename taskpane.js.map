{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/taskpane/taskpane.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","DAYS","MONTHS","OPTIONS","sheets","repertoire","recitalPlanning","recitalHistory","workflowLog","workflowOptions","fields","performer","updateDates","addToHistory","dateColumn","recitalCount","repField","dateField","v12Field","v2Field","ranges","range","this","number","letter","id","title","composer","length","tab","cc","dateStamp","venue12","venue2","date","dateStampToDate","dateString","dateStamptoString","forEach","row","composition","Composition","push","item","index","array","program","programToString","Date","toISOString","split","getUTCDay","getUTCMonth","getUTCDate","getUTCFullYear","line","filter1","filter","filter2","filter3","filter4","filterClear","Excel","run","context","sheet","workbook","worksheets","getItem","repertoireTable","tables","column","columns","clear","filterColumn","toString","apply","filterOn","FilterOn","values","sync","log","message","node","document","createElement","innerText","getElementById","appendChild","createRecitals","rep","replace","v12","v2","getRange","load","recitalRanges","recital","Recital","recitals","updatePerformanceDates","repertoireList","firstRow","rowIndex","firstCol","tableRowIndex","sheetRowIndex","arr","getRangeByIndexes","addToRecitalHistory","formats","recitalDate","used","getUsedRange","getLastRow","numberFormat","v12RowIndex","v2RowIndex","firstBodyRowIndex","lastBodyRowIndex","dateRow","getRow","merge","format","horizontalAlignment","font","bold","size","borders","color","headerRow","fill","totalCell","formula","formulas","addToWorkflowLog","data","today","todayString","getFullYear","getMonth","getDate","recitalDates","json","JSON","stringify","rows","add","keys","Office","onReady","info","host","HostType","onclick"],"mappings":"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","file":"taskpane.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 307);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\n\nconst DAYS: string[] = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\nconst MONTHS: string[] = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nconst OPTIONS: any = {\n  sheets: {\n    repertoire: \"Repertoire\",\n    recitalPlanning: \"Recital Planning\",\n    recitalHistory: \"Recital History\",\n    workflowLog: \"Workflow Log\",\n    workflowOptions: \"Workflow Options\"\n  },\n\n  // Range names to get workflow options from \"Workflow Options Sheet\"\n  fields: {\n    performer: \"OpPerformer\", // Performer Name\n    updateDates: \"OpUpdateDates\", // Y or N\n    addToHistory: \"OpAddToHistory\", // Y or N\n    dateColumn: \"OpDateColumn\", // Leftmost column of performance history columns in the Repertoire sheet\n    recitalCount: \"OpRecitalCount\", // Number of recitals to loop through on the planning sheet\n    repField: \"OpRepFieldName\", // Template for repertoire fields - Ex: Recital{{index}}\n    dateField: \"OpDateFieldName\", // Template for date fields\n    v12Field: \"OpV12FieldName\", // Template for V12 fields\n    v2Field: \"OpV2FieldName\" // Template for V2 fields\n  },\n  ranges: {}\n};\n\ninterface CompositionRange {\n  // A row from the Recital Planning worksheet:\n  // [\"1.\", \"a.\", 87, \"Carillon de Westminter\", \"Louis Vierne\", 7, \"25\", \"23A\"]\n\n  0: string; // number\n  1: string; // letter\n  2: number; // ID\n  3: string; // Title\n  4: string; // Composer\n  5: number; // Length\n  6: string; // TAB\n  7: string; // CC\n}\n\nclass Composition {\n  number: string;\n  letter: string;\n  id: number;\n  title: string;\n  composer: string;\n  length: number;\n  tab: string;\n  cc: string;\n\n  constructor(range: CompositionRange) {\n    this.number = range[0];\n    this.letter = range[1];\n    this.id = range[2];\n    this.title = range[3];\n    this.composer = range[4];\n    this.length = range[5];\n    this.tab = range[6];\n    this.cc = range[7];\n  }\n}\n\nclass Recital {\n  dateStamp: number;\n  dateString: string;\n  date: Date;\n  performer: string;\n  program: string;\n  repertoire: Composition[];\n  venue12: string;\n  venue2: string;\n\n  constructor(dateStamp: number, performer: string, venue12: string, venue2: string, range: CompositionRange[]) {\n    this.dateStamp = dateStamp;\n    this.date = this.dateStampToDate(this.dateStamp);\n    this.dateString = this.dateStamptoString(this.dateStamp);\n    this.performer = performer;\n    this.venue12 = venue12;\n    this.venue2 = venue2;\n\n    this.repertoire = [];\n\n    // Read items into compositions array\n    range.forEach((row) => {\n      if (row[3] != \"\") {\n        let composition = new Composition(row);\n        this.repertoire.push(composition);\n      }\n    });\n\n    // Filter out unnecessary \"a.\" designations (where there is no \"b.\")\n    this.repertoire.forEach((item, index, array) => {\n      // If this is the last piece on the recital and the letter is \"a.\"\n      if (index === array.length - 1 && item.letter === \"a.\") {\n        item.letter = \"\";\n      }\n\n      // If this is not the last piece on the recital, the letter is \"a.\", and the next letter is also \"a.\"\n      // (i.e., only one composition in this letter, so no letter necessary)\n      else if (index < array.length - 1 && item.letter === \"a.\" && array[index + 1].letter === \"a.\") {\n        item.letter = \"\";\n      }\n    });\n\n    this.program = this.programToString();\n  } // End constructor\n\n  // Converts Excel datestamp to JS Date\n  dateStampToDate(dateStamp: number): Date {\n    let date: Date = new Date((dateStamp - (25567 + 2)) * 86400 * 1000);\n    return date;\n  }\n\n  // Converts Excel datestamp to YYYY-MM-DD string\n  dateStamptoString(dateStamp: number): string {\n    let date: Date = this.dateStampToDate(dateStamp);\n    let dateString: string = date.toISOString().split(\"T\")[0];\n    return dateString;\n  }\n\n  // Returns the complete program as a string\n  // Example:\n  //\n  // Brian Mathias\n  // Monday, November 4, 2019\n  // 12:00 - Tabernacle\n  // 2:00 - Conference Center\n  //\n  // 1. Venite! - John Leavitt\n  // 2. a. Flute Solo - Thomas Arne\n  //    b. My Shepherd Will Supply My Need - Dale Wood\n  // 3. a. Come, Come Ye Saints - arr. by organist\n  //    b. An old melody - arr. by organist\n  // 4. Carillon de Westminster - Louis Vierne\n\n  programToString(): string {\n    let dateString =\n      DAYS[this.date.getUTCDay()] +\n      \", \" +\n      MONTHS[this.date.getUTCMonth()] +\n      \" \" +\n      this.date.getUTCDate() +\n      \", \" +\n      this.date.getUTCFullYear();\n\n    let program: string = \"\";\n    program += this.performer + \"\\n\";\n    program += dateString + \"\\n\";\n\n    if (this.venue12 !== \"\" && this.venue12 !== \"None\") {\n      program += \"12:00 - \" + this.venue12 + \"\\n\";\n    }\n\n    if (this.venue2 !== \"\" && this.venue2 !== \"None\") {\n      program += \"2:00 - \" + this.venue2 + \"\\n\";\n    }\n\n    program += \"\\n\";\n\n    for (let composition of this.repertoire) {\n      let line: string = \"\";\n\n      if (composition.number !== \"\") {\n        line += composition.number + \" \";\n      } else {\n        line += \"   \";\n      }\n\n      if (composition.letter !== \"\") {\n        line += composition.letter + \" \";\n      }\n\n      line += composition.title + \" - \" + composition.composer + \"\\n\";\n      program += line;\n    }\n\n    return program;\n  }\n} // End class\n\nasync function filter1() {\n  await filter(1);\n}\n\nasync function filter2() {\n  await filter(2);\n}\n\nasync function filter3() {\n  await filter(3);\n}\n\nasync function filter4() {\n  await filter(4);\n}\n\nasync function filterClear() {\n  await filter(-1);\n}\n\nasync function filter(index: number) {\n  await Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Repertoire\");\n    const repertoireTable = sheet.tables.getItem(\"RepertoireList\");\n\n    let columns = [\"O1\", \"O2\", \"O3\", \"O4\"];\n\n    // Clear any current filters on recital order columns\n    for (let column of columns) {\n      let filter = repertoireTable.columns.getItem(column).filter.clear();\n    }\n\n    if (index > 0 && index < 5) {\n      let filterColumn = \"O\" + index.toString();\n      let filter = repertoireTable.columns.getItem(filterColumn).filter;\n      filter.apply({\n        filterOn: Excel.FilterOn.values,\n        values: [\"1\"]\n      });\n    }\n\n    return context.sync();\n  });\n}\n\nasync function run() {\n  await Excel.run(async (context) => {\n    let logNode = document.getElementById(\"log\");\n    logNode.innerText = \"\";\n\n    function log(message: string) {\n      let node = document.createElement(\"p\");\n      node.innerText = message;\n      let log = document.getElementById(\"log\");\n      log.appendChild(node);\n    }\n\n    log(\"Starting workflow...\");\n\n    // Global variables\n    let recitalRanges = [];\n    let recitals: Recital[] = [];\n\n    // Initialize worksheets\n    let sheets: {\n      repertoire: Excel.Worksheet;\n      recitalPlanning: Excel.Worksheet;\n      recitalHistory: Excel.Worksheet;\n      workflowLog: Excel.Worksheet;\n      workflowOptions: Excel.Worksheet;\n    } = {\n      repertoire: context.workbook.worksheets.getItem(OPTIONS.sheets.repertoire),\n      recitalPlanning: context.workbook.worksheets.getItem(OPTIONS.sheets.recitalPlanning),\n      recitalHistory: context.workbook.worksheets.getItem(OPTIONS.sheets.recitalHistory),\n      workflowLog: context.workbook.worksheets.getItem(OPTIONS.sheets.workflowLog),\n      workflowOptions: context.workbook.worksheets.getItem(OPTIONS.sheets.workflowOptions)\n    };\n\n    // Load values of workflow options\n    Object.keys(OPTIONS.fields).forEach((key, index, array) => {\n      OPTIONS.ranges[key] = sheets.workflowOptions.getRange(OPTIONS.fields[key]);\n      OPTIONS.ranges[key].load(\"values\");\n    });\n\n    await context.sync();\n\n    // Store values from options fields in OPTIONS object\n    Object.keys(OPTIONS.ranges).forEach((key, index, array) => {\n      OPTIONS[key] = OPTIONS.ranges[key].values[0][0];\n    });\n\n    async function createRecitals() {\n      // Loop through the number of recitals specified in workflow options (starting at 1 - not zero!)\n      for (let i = 1; i < OPTIONS.recitalCount + 1; i++) {\n        // Create field names from templates on workflow options sheet\n        let fields: any = {};\n        fields.rep = OPTIONS.repField.replace(\"{{index}}\", i); // Recital1, etc.\n        fields.date = OPTIONS.dateField.replace(\"{{index}}\", i); // Recital1D etc.\n        fields.v12 = OPTIONS.v12Field.replace(\"{{index}}\", i); // Recital1V12, etc.\n        fields.v2 = OPTIONS.v2Field.replace(\"{{index}}\", i); // Recital1V2, etc.\n\n        // Get ranges\n        let ranges: any = {};\n        ranges.rep = sheets.recitalPlanning.getRange(fields.rep);\n        ranges.date = sheets.recitalPlanning.getRange(fields.date);\n        ranges.v12 = sheets.recitalPlanning.getRange(fields.v12);\n        ranges.v2 = sheets.recitalPlanning.getRange(fields.v2);\n\n        // Load values\n        ranges.rep.load(\"values\");\n        ranges.date.load(\"values\");\n        ranges.v12.load(\"values\");\n        ranges.v2.load(\"values\");\n\n        // Push ranges object to recitalRanges array\n        recitalRanges.push(ranges);\n      }\n\n      // Load all queued values\n      await context.sync();\n\n      // Loop through recitalRanges - if a recital is present, create Recital object and add it to the recitals array\n      recitalRanges.forEach((item, index, array) => {\n        // If the recital has a value in the date field\n        if (item.date.values[0][0] !== \"\") {\n          let recital = new Recital(\n            item.date.values[0][0],\n            OPTIONS.performer,\n            item.v12.values[0][0],\n            item.v2.values[0][0],\n            item.rep.values\n          );\n          recitals.push(recital);\n        }\n      });\n      log(recitals.length + \" recitals found.\");\n    } // End createRecitals()\n\n    // Update Recital Dates\n    async function updatePerformanceDates(recitals: Recital[]) {\n      const repertoireList = sheets.repertoire.getRange(\"RepertoireList\");\n      repertoireList.load(\"values, rowIndex\");\n      await context.sync();\n\n      // First row of the table\n      let firstRow = repertoireList.rowIndex;\n\n      // First column of dates\n      let firstCol: number = OPTIONS.dateColumn;\n\n      // Row index of composition relative to table\n      let tableRowIndex: number;\n\n      // Row index of composition relative to worksheet\n      let sheetRowIndex: number;\n\n      // A row from repertoire list\n      let row;\n\n      for (let recital of recitals) {\n        repertoireList.load(\"values, rowIndex\");\n        await context.sync();\n\n        for (let composition of recital.repertoire) {\n          // Find the row number of the composition and assign it to tableRowIndex\n          for (let i = 0; i < repertoireList.values.length; i++) {\n            // If the first column contains the ID number of the composition\n            if (repertoireList.values[i][0] === composition.id) {\n              row = repertoireList.values[i];\n              tableRowIndex = i;\n              break;\n            }\n          }\n\n          // First row of RepertoireList table + table index of composition\n          sheetRowIndex = firstRow + tableRowIndex;\n\n          let values = [];\n          values.push(recital.dateStamp);\n          values.push(row[firstCol]);\n          values.push(row[firstCol + 1]);\n          values.push(row[firstCol + 2]);\n\n          // Excel expects a two-dimensional array to set values for any range\n          let arr = [];\n          arr.push(values);\n\n          const range = sheets.repertoire.getRangeByIndexes(sheetRowIndex, firstCol, 1, 4);\n          range.values = arr;\n        }\n\n        await context.sync();\n      }\n      log(\"Performance dates updated.\");\n    } // End updatePerformanceDates()\n\n    async function addToRecitalHistory() {\n      for (let recital of recitals) {\n        let values = [];\n        let formats = [];\n\n        // Set values and number formats for each row\n\n        /// Row 0 - Recital Date\n        let recitalDate =\n          recital.date.getUTCMonth() + 1 + \"/\" + recital.date.getUTCDate() + \"/\" + recital.date.getUTCFullYear();\n\n        values.push([recitalDate, \"\", \"\", \"\", \"\", \"\"]);\n        formats.push([\"m/d/yyyy\", \"\", \"\", \"\", \"\", \"\"]);\n\n        /// Row 1 - 12:00 Venue\n        values.push([\"12:00\", recital.venue12, \"\", \"\", \"\", \"\"]);\n        formats.push([\"@\", \"@\", \"\", \"\", \"\", \"\"]);\n\n        /// Row 2 - 2:00 Venue\n        values.push([\"2:00\", recital.venue2, \"\", \"\", \"\", \"\"]);\n        formats.push([\"@\", \"@\", \"\", \"\", \"\", \"\"]);\n\n        /// Row 3 - Header Row\n        values.push([\"ON\", \"OL\", \"ID\", \"Title\", \"Composer\", \"Length\"]);\n        formats.push([\"Text\", \"Text\", \"Text\", \"Text\", \"Text\", \"Text\"]);\n\n        /// Body Rows (Rows 4-(4 + recital.repertoire.length))\n        for (let composition of recital.repertoire) {\n          values.push([\n            composition.number,\n            composition.letter,\n            composition.id,\n            composition.title,\n            composition.composer,\n            composition.length\n          ]);\n          formats.push([\"@\", \"\", \"\", \"\", \"\", \"0.00\"]);\n        }\n\n        /// Total Row (formula added later)\n        values.push([\"\", \"\", \"\", \"\", \"\", \"\"]);\n        formats.push([\"\", \"\", \"\", \"\", \"\", \"\"]);\n\n        // Get ranges and add values and number formats to worksheet\n        let sheet = context.workbook.worksheets.getItem(\"Recital History\");\n        let used = sheet.getUsedRange().getLastRow();\n        used.load(\"address,rowIndex\");\n        await context.sync();\n\n        // Start new recital 3 rows below the used range\n        let range = sheet.getRangeByIndexes(used.rowIndex + 4, 0, values.length, 6);\n\n        // Apply values and number formats to the range\n        range.numberFormat = formats;\n        range.values = values;\n\n        // Row numbers for getting ranges to apply formatting\n        let dateRowIndex = used.rowIndex + 4;\n        let v12RowIndex = used.rowIndex + 5;\n        let v2RowIndex = used.rowIndex + 6;\n        let firstBodyRowIndex = used.rowIndex + 8;\n        let lastBodyRowIndex = firstBodyRowIndex + recital.repertoire.length;\n\n        // Format Row 0\n        let dateRow = range.getRow(0);\n        dateRow.merge();\n        dateRow.format.horizontalAlignment = \"Right\";\n        dateRow.format.font.bold = true;\n        dateRow.format.font.size = 14;\n        dateRow.format.borders.getItem(\"EdgeBottom\").color = \"000000\";\n\n        // Format Row 1\n        let v12 = sheet.getRangeByIndexes(v12RowIndex, 0, 1, 1);\n        v12.format.font.bold = true;\n        let v12Value = sheet.getRangeByIndexes(v12RowIndex, 1, 1, 5);\n        v12Value.merge();\n\n        // Format Row 2\n        let v2 = sheet.getRangeByIndexes(v2RowIndex, 0, 1, 1);\n        v2.format.font.bold = true;\n        let v2Value = sheet.getRangeByIndexes(v2RowIndex, 1, 1, 5);\n        v2Value.merge();\n\n        // Format Row 4\n        let headerRow = range.getRow(3);\n        headerRow.format.fill.color = \"000000\";\n        headerRow.format.font.color = \"FFFFFF\";\n        headerRow.format.font.bold = true;\n        headerRow.format.horizontalAlignment = \"Center\";\n\n        // Format Body Rows\n        for (let i = firstBodyRowIndex; i < lastBodyRowIndex; i++) {\n          let row = sheet.getRangeByIndexes(i, 0, 1, 6);\n\n          if (i % 2 === 0) {\n            row.format.fill.color = \"DADADA\";\n          }\n\n          row.format.borders.getItem(\"EdgeTop\").color = \"000000\";\n          row.format.borders.getItem(\"EdgeBottom\").color = \"000000\";\n          row.format.borders.getItem(\"EdgeLeft\").color = \"000000\";\n          row.format.borders.getItem(\"EdgeRight\").color = \"000000\";\n        }\n\n        // Right Align Composer Names\n        let composerColumn = sheet.getRangeByIndexes(firstBodyRowIndex, 4, recital.repertoire.length, 2);\n        composerColumn.format.horizontalAlignment = \"Right\";\n\n        // Add formula and format to time total\n        let totalCell = sheet.getRangeByIndexes(lastBodyRowIndex, 5, 1, 1);\n        let formula = \"=SUM(F\" + (firstBodyRowIndex + 1) + \":F\" + lastBodyRowIndex + \")\";\n\n        totalCell.formulas = [[formula]];\n        totalCell.format.font.bold = true;\n        totalCell.format.horizontalAlignment = \"Right\";\n        totalCell.numberFormat = [[\"0.00\"]];\n\n        await context.sync();\n      }\n      log(recitals.length + \" recitals added to recital history.\");\n    }\n\n    async function addToWorkflowLog() {\n      let data: any = {};\n      let today = new Date();\n\n      // Format today as YYYY-MM-DD\n      let todayString = today.getFullYear() + \"-\";\n\n      if (today.getMonth() + 1 < 10) {\n        todayString += \"0\";\n      }\n      todayString += today.getMonth() + 1 + \"-\";\n\n      if (today.getDate() < 10) {\n        todayString += \"0\";\n      }\n      todayString += today.getDate();\n\n      // Create string of recital dates in MM/DD, MM/DD format\n      let recitalDates: string = \"\";\n\n      for (let i = 0; i < recitals.length; i++) {\n        recitalDates += recitals[i].date.getUTCMonth() + 1 + \"/\" + recitals[i].date.getUTCDate();\n        if (i < recitals.length - 1) {\n          recitalDates += \", \";\n        }\n      }\n\n      data.date = todayString;\n      data.recitals = recitals;\n      let json: string = JSON.stringify(data);\n\n      let logTable = sheets.workflowLog.tables.getItem(\"WorkflowLog\");\n      logTable.rows.add(0, [[todayString, recitalDates, json, \"\"]]);\n\n      log(\"JSON added to workflow log.\");\n      return context.sync();\n    }\n\n    // Run workflow functions in order\n\n    await createRecitals();\n\n    if (OPTIONS.updateDates === \"Y\") {\n      await updatePerformanceDates(recitals);\n    }\n\n    if (OPTIONS.addToHistory === \"Y\") {\n      await addToRecitalHistory();\n    }\n\n    await addToWorkflowLog();\n    log(\"Workflow complete.\");\n  });\n}\n\n/** Default helper for invoking an action and handling errors. */\nasync function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    //console.error(error);\n    let log = document.getElementById(\"log\");\n    let node = document.createElement(\"p\");\n    node.innerText = error;\n    node.style.color = \"red\";\n    log.appendChild(node);\n  }\n}\n\nOffice.onReady(info => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"run\").onclick = run;\n    document.getElementById(\"filter1\").onclick = filter1;\n    document.getElementById(\"filter2\").onclick = filter2;\n    document.getElementById(\"filter3\").onclick = filter3;\n    document.getElementById(\"filter4\").onclick = filter4;\n    document.getElementById(\"filterClear\").onclick = filterClear;\n  }\n});"],"sourceRoot":""}